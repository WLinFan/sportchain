* 环境搭建

版本信息:
- Hyperledger Fabric v1.1.0
- Node.js v6.10.0
- Go v1.9+

** Hyperledger Fabric 环境搭建

*** 安装 Go

[[https://golang.org/doc/install][安装 Go]]

** Node.js

[[https://nodejs.org/en/download/][下载 v6.10.0]]

安装, 配置环境变量.

** Docker

[[https://docs.docker.com/install/][安装Docker]]

** docker-compose

[[https://docs.docker.com/compose/install/][安装docker-compose]]

** Fabric 源码

Ubuntu 16.04LTS:
#+BEGIN_SRC Shell
mkdir -p ~/go/src/github.com/hyperledger 
cd ~/go/src/github.com/hyperledger 
git clone https://github.com/hyperledger/fabric.git
git checkout v1.1.0
#+END_SRC

** Fabric-Samples 源码

[[https://hyperledger-fabric.readthedocs.io/en/release-1.1/samples.html][Fabric-Samples 配置]]

* 介绍

** 前端

由于目前前端未和后端连接, 故暂时自己写简单的前端来测试.

项目使用 Express 框架.

[[http://expressjs.com/zh-cn/][Express 介绍]]

** 区块链网络

使用 fabric-samples/fabcar/startFabric 脚本来启动网络.

#+BEGIN_SRC Shell
./startFabric
#+END_SRC

** 项目

新建项目文件: sportchain

项目结构如下图所示:

[[./0.png]]

在 github 的文件中, 还有 chaincode 目录, 下载后需要将 chaincode 里面的文件放入 fabric-samples/chaincode/fabcar/go 里面.

** 进展

目前写了:
- 管理员登记
- 普通用户的注册登陆
- 普通用户上传步数: 服务器将步数转运动能量并写入区块链
- 普通用户查询步数: 普通用户登陆后才可查询

** 下一步

*** 普通用户的注册登陆

目前的实现为求简单, 只将用户的密码存入服务器的文件中, 且多个用户的密码会覆盖.

下一步:
- 需要将用户的相关信息(不仅仅是密码)存入数据库
- 用户的 Session 应存入缓存

为安全起见, 应提取"用户密码+随机字符串"的摘要, 再存入数据库, 不可直接将密码明文存入数据库.

*** 用户上传步数

目前的实现仅将用户步数简单处理, 转成运动能量后写入区块链. 下一步, 应该使用合理的公式将用户步数转为运动能量. 其次, 目前的实现, 每写入一次区块链, 会将上次的数据覆盖, 而未将多次提交的步数进行累加. 细节需进一步处理.

*** 运动能量兑换优惠券

暂未实现, 其操作区块链的原理与"用户上传步数"是相同的, 需要将用户运动能量转入商家账户(这一步要写入区块链), 商家将优惠券发给用户.
