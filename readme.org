* 环境搭建

版本信息:
- Hyperledger Fabric v1.1.0
- Node.js v6.10.0
- Go v1.9+

** Hyperledger Fabric 环境搭建

*** 安装 Go

[[https://golang.org/doc/install][安装 Go]]

** Node.js

[[https://nodejs.org/en/download/][下载 v6.10.0]]

安装, 配置环境变量.

** Docker

[[https://docs.docker.com/install/][安装Docker]]

** docker-compose

[[https://docs.docker.com/compose/install/][安装docker-compose]]

** Fabric 源码

Ubuntu 16.04LTS:
#+BEGIN_SRC Shell
mkdir -p ~/go/src/github.com/hyperledger 
cd ~/go/src/github.com/hyperledger 
git clone https://github.com/hyperledger/fabric.git
git checkout v1.1.0
#+END_SRC

** Fabric-Samples 源码

[[https://hyperledger-fabric.readthedocs.io/en/release-1.1/samples.html][Fabric-Samples 配置]]

* 介绍

** 前端

由于目前前端未和后端连接, 故暂时自己写简单的前端来测试.

项目使用 Express 框架.

[[http://expressjs.com/zh-cn/][Express 介绍]]

** 区块链网络

使用 fabric-samples/fabcar/startFabric 脚本来启动网络.

#+BEGIN_SRC Shell
./startFabric
#+END_SRC

** 项目

新建项目文件: sportchain

在 github 的文件中, 还有 chaincode 目录, 下载后需要将 chaincode 里面的文件放入 fabric-samples/chaincode/fabcar/go 里面.

* 不使用 Fabric

如果编写的程序不涉及 Fabric, 则直接将使用了 *fabric/* 目录下文件的代码注释.

[[./docs/node.org][安装 Node]]

[[./docs/session.org][使用 Redis 作为缓存]]

[[./docs/sql.org][导入数据到 MySQL]]

** 运行

进入 sportchain 目录.
#+BEGIN_SRC Shell
npm install
npm start
#+END_SRC

* 启动

** 启动网络

#+BEGIN_SRC Shell
cd network/first-network
./byfn.sh -m generate -c mychannel
#+END_SRC

** 启动服务器

进入 sportchain 目录.
#+BEGIN_SRC Shell
npm start
#+END_SRC
